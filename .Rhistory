library(dplyr)
setwd("~/Data Science/RepData_PeerAssessment1")
activity <- read.csv("activity.zip")
executable <- file.path("C:", "Program Files", "7-Zip", "7z.exe")
parameters <- x
parameters <- ""
parameters <- "x"
cmd <- paste(paste0("\"", executable, "\""), parameters, paste0("\"", file.path(getwd(), "activity.zip"), "\""))
print(cmd)
system(cmd)
activity <- read.csv("activity.csv")
activity <- tbl_df(activity)
activity
activity$date <- as.POSIXct(as.character(activity$date))
activity
activity$date <- as.Date(activity$date)
activity
activity <- tbl_df(read.csv("activity.csv"))
activity
tail(activity)
activity$date <- as.POSIXct(as.character(activity$date))
tail(activity)
floor(0.1)
activity <- group_by(activity, date)
activity
tapply(activity$steps[!is.na(activity$steps)], activity$date[!is.na(activity$steps)], sum)
total <- tapply(activity$steps[!is.na(activity$steps)], activity$date[!is.na(activity$steps)], sum)
qplot(total)
library(ggplot2)
qplot(total)
qplot(total, binwidth = 1000, xlab = "Total number of steps taken per day")
total <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
qplot(total, binwidth = 1000, xlab = "Total number of steps taken per day")
total
qplot(total, binwidth = 1000, xlab = "Total number of steps taken per day", col = names(total))
qplot(total, binwidth = 1000, xlab = "Total number of steps taken per day", fill = names(total))
setwd("~/Data Science/RepData_PeerAssessment1")
path = file.path(getwd(), "activity.zip")
file.exists("activity.csv")
path = file.path(getwd(), "activity.zip")
cmd <- paste(paste0("\"", executable, "\""), parameters, paste0("\"", path, "\""))
cmd
system(cmd)
source("PA1.R")
source("PA1.R")
activity
source("PA1.R")
source("PA1.R")
source("PA1.R")
source("PA1.R")
source("PA1.R")
source("PA1.R")
averages <- aggregate(list(steps = data$steps), by = list(interval = data$interval), FUN = mean, na.rm = T)
averages <- aggregate(list(steps = activity$steps), by = list(interval = activity$interval), FUN = mean, na.rm = T)
averages
head(averages)
averages <- tapply(activity$steps, activity$interval, mean)
head(averages)
averages <- tapply(activity$steps, activity$interval, mean, na.rm = T)
head(averages)
averages <- data.frame(interval = unique(activity$interval), average = tapply(activity$steps, activity$interval, mean, na.rm = TRUE))
averages
head(averages)
source("PA1.R")
averages
qplot(interval, average, data = averages)
qplot(interval, average, data = averages, geom = "line")
max(averages)
which.max(averages)
which.max(averages$average)
averages$interval[which.max(averages$average)]
averages[which.max(averages$average), ]
sum(is.na(activity$steps))
table(is.na(activity$steps))
impute <- function(steps, interval) {
value <- NA
if (is.na(steps)) {
value <- averages[averages$interval == interval, "steps"]
} else {
value <- c(steps)
}
return (value)
}
mapply(impute, activity$steps, activity$interval)
averages
impute <- function(steps, interval) {
value <- NA
if (is.na(steps)) {
value <- averages[averages$interval == interval, "average"]
} else {
value <- c(steps)
}
return (value)
}
mapply(impute, activity$steps, activity$interval)
activity$imputed <- mapply(impute, activity$steps, activity$interval)
totalSteps <- tapply(activity$imputed, activity$date, sum)
totalSteps <- tapply(activity$imputed, activity$date, sum)
totalSteps <- tapply(activity$imputed, activity$date, FUN = sum)
class(activity$steps)
class(activity$imputed)
activity$imputed <- unlist(mapply(impute, activity$steps, activity$interval))
class(activity$imputed)
totalSteps <- tapply(activity$imputed, activity$date, FUN = sum)
qplot(totalSteps, binwidth = 1000)
head(activity)
total
totalSteps
table(total, totalSteps)
mean(totalSteps)
median(totalSteps)
qplot(totalSteps, binwidth = 1000, col = names(totalSteps))
qplot(totalSteps, binwidth = 1000, fill = names(totalSteps))
totalSteps <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
print(qplot(totalSteps, binwidth = 1000, xlab = "Total number of steps taken per day", fill = names(totalSteps)))
activity$date[1]
weekdays(activity$date[1])
weekdays(activity$date[2])
weekdays(activity$date[324])
weekdays(activity$date[12213])
weekdays(activity$date[1213])
checkDay <- function(date) {
day <- weekdays(date)
if (day %in% c("Saturday", "Sunday")) {
return("Weekend")
} else if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")) {
return("Weekday")
} else {
stop("invalid date")
}
}
checkDay(activity$date[1213])
days <- checkDay(activity$date)
head(days)
days <- sapply(activity$date, checkDay)
head(days)
table(days)
class(Days)
class(days)
days <- factor(sapply(activity$date, checkDay))
head(days)
unclass(head(days))
